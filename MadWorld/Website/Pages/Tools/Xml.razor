@page "/validator/XML"

@using System.Xml;

<h3>XML</h3>

<MonacoEditor @ref="_editor" Id="xml-editor" CssClass="Editor-XML" ConstructionOptions="EditorConstructionOptions" OnContextMenu="OnContextMenu" />

<button type="button" class="btn btn-success" @onclick="ValidateXML">Validate XML</button>
<h3>Result</h3>
<p>@Result</p>

@code {
        private string Result = string.Empty;
        private int TotalValidations = 0;

        private async Task ValidateXML()
        {
            Result = string.Empty;
            TotalValidations++;

            try
            {
                string xmlText = await _editor.GetValue();
                new XmlDocument().LoadXml(xmlText);
                Result = $"Xml is Valid ({TotalValidations})";
            }
            catch (Exception ex)
            {
                ShowError(ex);
            }
        }

        private void ShowError(Exception ex)
        {
            Result = ex.Message;
        }

        private MonacoEditor _editor { get; set; }
        private string ValueToSet { get; set; }

        private StandaloneEditorConstructionOptions EditorConstructionOptions(MonacoEditor editor)
        {
            return new StandaloneEditorConstructionOptions
            {
                Language = "xml",
                GlyphMargin = true,
                Value = string.Empty
            };
        }

    private string[] decorationIds;

    private void OnContextMenu(EditorMouseEvent eventArg)
    {
        Console.WriteLine("OnContextMenu : " + System.Text.Json.JsonSerializer.Serialize(eventArg));
    }
}
