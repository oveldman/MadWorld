@page "/admin/accounts"
@layout AdminLayout

@using Microsoft.AspNetCore.Authorization
@using Website.Services.Interfaces;
@using Website.Shared.Models;
@using Website.Shared.Models.Admin;
@attribute [Authorize]
@inject NavigationManager Navigation;
@inject IAdminService _adminService;

<h3 class="p-3 text-center">Mad-World Accounts</h3>
<table class="table table-striped table-dark table-bordered table-hover">
    <thead>
        <tr>
            <th>Username</th>
            <th>Two factor enabled</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
        <tr>
            <td @onclick="() => EditAccount(user)">@user.Username</td>
            <td @onclick="() => EditAccount(user)"><input type="checkbox" class="form-check-input" @bind="@user.TwoFactorEnabled" disabled /></td>
            <td><span @onclick="() => DeleteAcount(user)" class="oi oi-trash"></span></td>
        </tr>
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="NewAccount">Nieuw</button>


@code {
    private List<UserModel> users = new();

    protected override async Task OnInitializedAsync()
    {
        users = await _adminService.GetUsers();
    }

    private async Task DeleteAcount(UserModel user)
    {
        BaseModel response = await _adminService.DeleteUser(user.Id);

        if (response.Succeed)
        {
            users.Remove(user);
        }
    }

    private void EditAccount(UserModel user)
    {
        Navigation.NavigateTo($"/admin/accounts/edit/{user.Id}");
    }

    private void NewAccount()
    {
        Navigation.NavigateTo($"/admin/accounts/edit/0");
    }
}
